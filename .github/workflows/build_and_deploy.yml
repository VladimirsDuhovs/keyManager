name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.7

    - name: Build for amd64
      run: |
        env GOOS=darwin GOARCH=amd64 go build -o dist/keyManager_darwin_amd64
        env GOOS=linux GOARCH=amd64 go build -o dist/keyManager_linux_amd64

    - name: Build for arm64
      run: |
        env GOOS=darwin GOARCH=arm64 go build -o dist/keyManager_darwin_arm64
        env GOOS=linux GOARCH=arm64 go build -o dist/keyManager_linux_arm64

    - name: Create Tarballs
      run: |
        tar czvf keyManager_darwin_amd64.tar.gz -C dist keyManager_darwin_amd64
        tar czvf keyManager_darwin_arm64.tar.gz -C dist keyManager_darwin_arm64
        tar czvf keyManager_linux_amd64.tar.gz -C dist keyManager_linux_amd64
        tar czvf keyManager_linux_arm64.tar.gz -C dist keyManager_linux_arm64

    - name: Upload Tarballs
      uses: actions/upload-artifact@v2
      with:
        name: tarballs
        path: '*.tar.gz'

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Tarballs
      uses: actions/download-artifact@v2
      with:
        name: tarballs

    - name: Upload Darwin AMD64 Tarball to Cloudsmith
      uses: cloudsmith-io/action@master
      with:
        api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
        command: 'push'
        format: 'raw'
        owner: 'vladimirsduhovs'
        repo: 'key-manager'
        file: 'keyManager_darwin_amd64.tar.gz'
        name: 'keyManager_darwin_amd64'
        summary: 'keyManager summary'
        description: 'keyManager description'
        version: ${{ github.sha }}

    - name: Upload Darwin ARM64 Tarball to Cloudsmith
      uses: cloudsmith-io/action@master
      with:
        api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
        command: 'push'
        format: 'raw'
        owner: 'vladimirsduhovs'
        repo: 'key-manager'
        file: 'keyManager_darwin_arm64.tar.gz'
        name: 'keyManager_darwin_arm64'
        summary: 'keyManager summary'
        description: 'keyManager description'
        version: ${{ github.sha }}

    - name: Upload Linux AMD64 Tarball to Cloudsmith
      uses: cloudsmith-io/action@master
      with:
        api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
        command: 'push'
        format: 'raw'
        owner: 'vladimirsduhovs'
        repo: 'key-manager'
        file: 'keyManager_linux_amd64.tar.gz'
        name: 'keyManager_linux_amd64'
        summary: 'keyManager summary'
        description: 'keyManager description'
        version: ${{ github.sha }}

    - name: Upload Linux ARM64 Tarball to Cloudsmith
      uses: cloudsmith-io/action@master
      with:
        api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
        command: 'push'
        format: 'raw'
        owner: 'vladimirsduhovs'
        repo: 'key-manager'
        file: 'keyManager_linux_arm64.tar.gz'
        name: 'keyManager_linux_arm64'
        summary: 'keyManager summary'
        description: 'keyManager description'
        version: ${{ github.sha }}

    - name: Update metadata
      run: |
        pwd
        ls -la
        METADATA='
        {
          "version": "'${{ github.sha }}'",
          "amd64": {
            "darwin": "https://dl.cloudsmith.io/public/vladimirsduhovs/key-manager/raw/names/keyManager_darwin_amd64/versions/${{ github.sha }}/keyManager.tar.gz",
            "linux": "https://dl.cloudsmith.io/public/vladimirsduhovs/key-manager/raw/names/keyManager_linux_amd64/versions/${{ github.sha }}/keyManager.tar.gz"
          },
          "arm64": {
            "darwin": "https://dl.cloudsmith.io/public/vladimirsduhovs/key-manager/raw/names/keyManager_darwin_arm64/versions/${{ github.sha }}/keyManager.tar.gz",
            "linux": "https://dl.cloudsmith.io/public/vladimirsduhovs/key-manager/raw/names/keyManager_linux_arm64/versions/${{ github.sha }}/keyManager.tar.gz"
          }
        }'
        echo "$METADATA" > ./installation_scripts/metadata.json

    - name: Commit and push metadata.json
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ./installation_scripts/metadata.json
        git commit -m "Update installation_scripts/metadata.json with new versions [skip ci]" && echo 'Commit success' || echo 'No changes to commit'
        git push https://${{ secrets.GH_PAT }}@github.com/vladimirsduhovs/keyManager.git HEAD:main
